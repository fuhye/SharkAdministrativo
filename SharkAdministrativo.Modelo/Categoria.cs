//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharkAdministrativo.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Data;
    using SDKCONTPAQi;
    using System.Windows.Forms;
    
    public partial class Categoria
    {
        public Categoria()
        {
            this.Grupo = new HashSet<Grupo>();
        }
    
        public int id { get; set; }
        public string nombre { get; set; }
    
        public virtual ICollection<Grupo> Grupo { get; set; }

        /// <summary>
        /// Obtiene todos los registros de categorías.
        /// </summary>
        /// <returns>La lista de categorías.</returns>
        public List<Categoria> obtenerTodos()
        {
            List<Categoria> categorias = new List<Categoria>();
             try{ 
                 using(bdsharkEntities db = new bdsharkEntities())
                {
                    db.Configuration.LazyLoadingEnabled = true;
                    var categoriaQuery = from categoria in db.Categorias select categoria;

                    foreach (var categoria in categoriaQuery)
                    {
                        categorias.Add(categoria);
                    }
                }
            }catch(Exception ex){
                MessageBox.Show("Error: "+ex+"\nError en la autenticación con la base de datos", "Aviso Shark" );
            }
            
            return categorias;
        }

        /// <summary>
        /// Obtiene una categoría específica.
        /// </summary>
        /// <returns>La categoría encontrada.</returns>
        public Categoria obtener(string Name)
        {
            Categoria categoria = new Categoria();
             try{ 
                 using(bdsharkEntities db = new bdsharkEntities())
                {

                    db.Configuration.LazyLoadingEnabled = true;
                    var categoriasQuery = from category in db.Categorias where category.nombre.Trim() == Name select category;
                    // Iterate through the results of the parameterized query.
                    foreach (var category in categoriasQuery)
                    {
                        categoria = category;
                    }
                 }
            }catch(Exception ex){
                MessageBox.Show("Error: "+ex+"\nError en la autenticación con la base de datos", "Aviso Shark" );
            }
            

            return categoria;

        }

        /// <summary>
        /// Registra un objeto categoría en la base de datos.
        /// </summary>
        /// <param name="categoria">el objeto a registrar.</param>
        public void registrar(Categoria categoria)
        {
             try{ 
                using(bdsharkEntities db = new bdsharkEntities())
                {
                    db.Configuration.LazyLoadingEnabled = true;
                    db.Categorias.Add(categoria);
                    db.SaveChanges();
                }
            }catch(Exception ex){
                MessageBox.Show("Error: "+ex+"\nError en la autenticación con la base de datos", "Aviso Shark" );
            }
        }

        /// <summary>
        /// Modifica un objeto categoría.
        /// </summary>
        /// <param name="categoria"></param>
        public void Modify(Categoria categoria)
        {

             try{ 
                using(bdsharkEntities db = new bdsharkEntities())
                {
                    Categoria category = db.Categorias.Find(categoria.id);
                    category.nombre = categoria.nombre;
                    db.Entry(category).State = EntityState.Modified;
                    db.SaveChanges();
                }

            }catch(Exception ex){
                MessageBox.Show("Error: "+ex+"\nError en la autenticación con la base de datos", "Aviso Shark" );
            }
        }

        /// <summary>
        /// Elimina una categoría creada en shark.
        /// </summary>
        /// <param name="id"></param>
        public void delete(int id)
        {
             try{
                 using (bdsharkEntities db = new bdsharkEntities())
                 {
                     var Query = from categoria in db.Categorias where categoria.id == id select categoria;
                     foreach (var categoria in Query)
                     {
                         db.Entry(categoria).State = EntityState.Deleted;
                     }
                     db.SaveChanges();
                 }
             }
             catch (Exception ex)
             {
                 MessageBox.Show("Error: " + ex + "\nError en la autenticación con la base de datos", "Aviso Shark");
             }
        }
    }
}
