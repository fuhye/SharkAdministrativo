//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharkAdministrativo.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Data;
    
    public partial class Unidad_Medida
    {
        public Unidad_Medida()
        {
            this.Insumo = new HashSet<Insumo>();
            this.InsumoElaborado = new HashSet<InsumoElaborado>();
        }
    
        public int id { get; set; }
        public string nombre { get; set; }
    
        public virtual ICollection<Insumo> Insumo { get; set; }
        public virtual ICollection<InsumoElaborado> InsumoElaborado { get; set; }

        /// <summary>
        /// Obtiene todos los registros de unidades de medida.
        /// </summary>
        /// <returns>La lista Obtenida</returns>
        public List<Unidad_Medida> obtenerTodos()
        {
            List<Unidad_Medida> unidades = new List<Unidad_Medida>();
            using (bdsharkEntities db = new bdsharkEntities())
            {
                db.Configuration.LazyLoadingEnabled = true;
                var unidadesQuery = from unidad in db.Unidades_Medida select unidad;
                foreach (var unidad in unidadesQuery)
                {
                    unidades.Add(unidad);
                }
            }
            return unidades;
        }

        /// <summary>
        /// Registra un objeto unidad de mediad en la base de datos.
        /// </summary>
        /// <param name="unidad">El objeto a registrar</param>
        public void registrar(Unidad_Medida unidad)
        {
            using (bdsharkEntities db = new bdsharkEntities())
            {
                db.Configuration.LazyLoadingEnabled = true;
                db.Unidades_Medida.Add(unidad);
                db.SaveChanges();
            }
        }

        /// <summary>
        /// Obtiene un objeto unidad de medida específico.
        /// </summary>
        /// <param name="name">Parámetro de búsqueda.</param>
        /// <returns>El objeto encontrado.</returns>
        public Unidad_Medida obtener(string name)
        {
            Unidad_Medida medida = new Unidad_Medida();
            using (bdsharkEntities db = new bdsharkEntities())
            {
                db.Configuration.LazyLoadingEnabled = true;
                var unidadesQuery = from unidad in db.Unidades_Medida where unidad.nombre == name select unidad;
                foreach (var unidad in unidadesQuery)
                {
                    medida = unidad;
                }

            }
            return medida;
        }

        /// <summary>
        /// Obtiene un objeto unidad de medida específico.
        /// </summary>
        /// <param name="id">Parámetro de búsqueda.</param>
        /// <returns>El objeto encontrado.</returns>
        public Unidad_Medida obtenerPorId(int id)
        {
            Unidad_Medida unidad = new Unidad_Medida();
            using (bdsharkEntities db = new bdsharkEntities())
            {
                unidad = db.Unidades_Medida.Find(id);
            }
            return unidad;
        }
    }
}
