//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharkAdministrativo.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Data;
    
    public partial class AreaProduccion
    {
        public int id { get; set; }
        public string nombre { get; set; }

        /// <summary>
        /// Registra un objeto área de producción en la base de datos.
        /// </summary>
        /// <param name="area">El objeto a registrar.</param>
        public void registrar(AreaProduccion area)
        {
            using (bdsharkEntities db = new bdsharkEntities())
            {
                db.AreasProduccion.Add(area);
                db.SaveChanges();
            }
        }

        /// <summary>
        /// Obtiene un objeto AreaProduccion específico.
        /// </summary>
        /// <param name="name">Parámetro de búsqueda</param>
        /// <returns>El área encontrada.</returns>
        public AreaProduccion obtener(string name)
        {
            AreaProduccion _area = new AreaProduccion();
            using (bdsharkEntities db = new bdsharkEntities())
            {

                db.Configuration.LazyLoadingEnabled = true;
                var areaQuery = from area in db.AreasProduccion where area.nombre.Trim() == name select area;
                // Iterate through the results of the parameterized query.
                foreach (var area in areaQuery)
                {
                    _area = area;
                }
            }

            return _area;
        }

        /// <summary>
        /// Obtiene un área específica.
        /// </summary>
        /// <param name="id">Parámetro de búsqueda</param>
        /// <returns>El área encontrada.</returns>
        public AreaProduccion obtenerPorID(int id)
        {
            AreaProduccion area = new AreaProduccion();
            using (bdsharkEntities db = new bdsharkEntities())
            {
                area = db.AreasProduccion.Find(id);
            }
            return area;
        }

        public List<AreaProduccion> obtenerTodos()
        {
            List<AreaProduccion> areas = new List<AreaProduccion>();
            using (bdsharkEntities db = new bdsharkEntities())
            {
                db.Configuration.LazyLoadingEnabled = true;
                var areasQuery = from area in db.AreasProduccion select area;
                // Iterate through the results of the parameterized query.
                foreach (var area in areasQuery)
                {
                    areas.Add(area);
                }
            }
            return areas;
        }
    }
}
