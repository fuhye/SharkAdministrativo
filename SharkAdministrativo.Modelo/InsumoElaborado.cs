//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharkAdministrativo.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Data;
    
    public partial class InsumoElaborado
    {
        public InsumoElaborado()
        {
            this.Receta = new HashSet<Receta>();
        }
    
        public int id { get; set; }
        public string insumos { get; set; }
        public Nullable<double> rendimiento { get; set; }
        public int grupo_id { get; set; }
        public string descripcion { get; set; }
        public int unidad_id { get; set; }
        public Nullable<double> costo_unitario { get; set; }
        public Nullable<double> costo_promedio { get; set; }
        public Nullable<double> costo_estandar { get; set; }
        public string inventariable { get; set; }
        public Nullable<int> entrada_automatica { get; set; }
        public Nullable<double> existencia { get; set; }
    
        public virtual Grupo Grupo { get; set; }
        public virtual Unidad_Medida Unidad_Medida { get; set; }
        public virtual ICollection<Receta> Receta { get; set; }

        /// <summary>
        /// Registra un objeto insumo elaborado en la base de datos.
        /// </summary>
        /// <param name="insumo">Objeto a registrar</param>
        public void registrar(InsumoElaborado insumo)
        {
            using (bdsharkEntities db = new bdsharkEntities())
            {
                db.Configuration.LazyLoadingEnabled = true;
                db.Grupos.Attach(insumo.Grupo);
                db.Unidades_Medida.Attach(insumo.Unidad_Medida);
                db.InsumosElaborados.Add(insumo);
                db.SaveChanges();
            }
        }

        /// <summary>
        /// Obtiene todos los registros de insumos eleborados.
        /// </summary>
        /// <returns>La lista de objetos.</returns>
        public List<InsumoElaborado> obtenerTodos()
        {
            List<InsumoElaborado> insumosElaborados = new List<InsumoElaborado>();
            bdsharkEntities db = new bdsharkEntities();

            db.Configuration.LazyLoadingEnabled = true;
            var insumosElaboradosQuery = from insumoElaborado in db.InsumosElaborados select insumoElaborado;
            foreach (var insumoElaborado in insumosElaboradosQuery)
            {
                insumosElaborados.Add(insumoElaborado);
            }

            return insumosElaborados;
        }




        /// <summary>
        /// Obtiene un objeto insumo elaborado específico.
        /// </summary>
        /// <param name="id">Parámetro de búsqueda.</param>
        /// <returns>El objeto encontrado.</returns>
        public InsumoElaborado getForId(int id)
        {
            InsumoElaborado insumo = new InsumoElaborado();
            using (bdsharkEntities db = new bdsharkEntities())
            {
                insumo = db.InsumosElaborados.Find(id);
            }
            return insumo;
        }

        /// <summary>
        /// Modifíca un objeto insumo elaborado en la base de datos.
        /// </summary>
        /// <param name="insumo"></param>
        public void modificar(InsumoElaborado insumo)
        {
            using (bdsharkEntities db = new bdsharkEntities())
            {
                InsumoElaborado n_insumo = db.InsumosElaborados.Find(insumo.id);
                n_insumo.descripcion = insumo.descripcion;
                n_insumo.costo_promedio = insumo.costo_promedio;
                n_insumo.costo_estandar = insumo.costo_estandar;
                n_insumo.grupo_id = insumo.grupo_id;
                n_insumo.inventariable = insumo.inventariable;
                n_insumo.costo_unitario = insumo.costo_unitario;
                n_insumo.unidad_id = insumo.unidad_id;
                n_insumo.entrada_automatica = insumo.entrada_automatica;
                n_insumo.rendimiento = insumo.rendimiento;


                db.InsumosElaborados.Attach(n_insumo);
                db.Entry(n_insumo).State = EntityState.Modified;
                db.SaveChanges();
            }
        }

        /// <summary>
        /// Elimina in objeto insumo elaborado en la base de datos.
        /// </summary>
        /// <param name="id">Parámetro de busqueda</param>
        public void eliminar(int id)
        {
            using (bdsharkEntities db = new bdsharkEntities())
            {
                InsumoElaborado insumo = db.InsumosElaborados.Find(id);
                db.Entry(insumo).State = EntityState.Deleted;
                db.SaveChanges();
            }
        }
    }
}
