//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharkAdministrativo.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Linq;
    using SDKCONTPAQi;
    using System.Windows.Forms;
    
    public partial class Factura
    {
        public Factura()
        {
            this.Presentacion = new HashSet<Presentacion>();
        }
    
        public int id { get; set; }
        public string folio { get; set; }
        public System.DateTime fecha_emision { get; set; }
        public string tipo_comprobante { get; set; }
        public string lugar_expedicion { get; set; }
        public string forma_pago { get; set; }
        public string moneda { get; set; }
        public Nullable<int> procesada { get; set; }
        public string tipo_cambio { get; set; }
        public string subtotal { get; set; }
        public string total { get; set; }
    
        public virtual ICollection<Presentacion> Presentacion { get; set; }


        /// <summary>
        /// Valida el registro único de la factura actual.
        /// </summary>
        /// <param name="folio">Folio de la factura.</param>
        /// <returns>El folio encontrado.</returns>
        public string validarRegistro(string folio)
        {
            string o_folio = "";

             try{ 
                using(bdsharkEntities db = new bdsharkEntities())
                {

                    db.Configuration.LazyLoadingEnabled = true;
                    var facturaQuery = from factura in db.Facturas where factura.folio == folio select factura.folio;
                    // Iterate through the results of the parameterized query.
                    foreach (var factura in facturaQuery)
                    {
                        o_folio = factura;
                    }
                }
            }catch(Exception ex){
                MessageBox.Show("Error: "+ex+"\nError en la autenticación con la base de datos", "Aviso Shark" );
            }

            return o_folio;
        }


        /// <summary>
        /// Registra el objeto factura en la base de datos.
        /// </summary>
        /// <param name="factura">Objeto factura.</param>
        /// <returns>El objeto agregado.</returns>
        public Factura registrar(Factura factura)
        {
             try{
                 using (bdsharkEntities db = new bdsharkEntities())
                 {

                     try
                     {
                         db.Configuration.LazyLoadingEnabled = true;
                         db.Facturas.Add(factura);
                         db.SaveChanges();
                     }
                     catch (Exception e)
                     {
                         Console.Write("ERROR: " + e);
                     }
                 }
             }
             catch (Exception ex)
             {
                 MessageBox.Show("Error: " + ex + "\nError en la autenticación con la base de datos", "Aviso Shark");
             }


            return factura;
        }
    }
}
