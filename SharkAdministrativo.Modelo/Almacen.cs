//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharkAdministrativo.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Linq;
    public partial class Almacen
    {
        public Almacen()
        {
            this.Presentacion = new HashSet<Presentacion>();
            this.EntradaPresentacion = new HashSet<EntradaPresentacion>();
            this.Presentacion1 = new HashSet<Presentacion>();
            this.Salida_almacen = new HashSet<Salida_almacen>();
        }
    
        public int id { get; set; }
        public string nombre { get; set; }
        public string codigo { get; set; }
    
        public virtual ICollection<Presentacion> Presentacion { get; set; }
        public virtual ICollection<EntradaPresentacion> EntradaPresentacion { get; set; }
        public virtual ICollection<Presentacion> Presentacion1 { get; set; }
        public virtual ICollection<Salida_almacen> Salida_almacen { get; set; }

        /// <summary>
        /// Obtiene todos los registros de almacén.
        /// </summary>
        /// <returns>Una lista de los reistros</returns>
        public List<Almacen> obtenerTodos()
        {
            List<Almacen> almacenes = new List<Almacen>();
            using (bdsharkEntities db = new bdsharkEntities())
            {
                db.Configuration.LazyLoadingEnabled = true;
                var almacenesQuery = from almacen in db.Almacenes select almacen;

                foreach (var almacen in almacenesQuery)
                {
                    almacenes.Add(almacen);
                }

            }
            return almacenes;
        }

        /// <summary>
        /// Obtiene un objeto de almacén específico.
        /// </summary>
        /// <param name="id">Parámetro de búsqueda.</param>
        /// <returns>El objeto único encontrado.</returns>
        public Almacen getForId(int id)
        {
            bdsharkEntities db = new bdsharkEntities();
            return db.Almacenes.Find(id);
        }

        /// <summary>
        /// Obtiene un objeto almacén específico
        /// </summary>
        /// <param name="Name">Parámetro de búsqueda.</param>
        /// <returns></returns>
        public Almacen obtener(string Name)
        {
            Almacen almacen = new Almacen();
            using (bdsharkEntities db = new bdsharkEntities())
            {

                db.Configuration.LazyLoadingEnabled = true;
                var almacenesQuery = from storage in db.Almacenes where storage.nombre.Trim() == Name select storage;
                // Iterate through the results of the parameterized query.
                foreach (var storage in almacenesQuery)
                {
                    almacen = storage;
                }
            }

            return almacen;

        }

        /// <summary>
        /// Obtiene a través del nombre el id.
        /// </summary>
        /// <param name="Name">Parámetro de búsqueda.</param>
        /// <returns>El id encontrado.</returns>
        public int obtenerID(string Name)
        {
            Almacen almacen = new Almacen();
            using (bdsharkEntities db = new bdsharkEntities())
            {

                db.Configuration.LazyLoadingEnabled = true;
                var almacenesQuery = from storage in db.Almacenes where storage.nombre.Trim() == Name select storage;
                // Iterate through the results of the parameterized query.
                foreach (var storage in almacenesQuery)
                {
                    almacen = storage;
                }
            }

            return almacen.id;
        }

        /// <summary>
        /// Obtiene a través del codigo
        /// </summary>
        /// <param name="codigo"></param>
        /// <returns></returns>
        public Almacen obtenerCodigo(string codigo)
        {
            Almacen almacen = new Almacen();
            using (bdsharkEntities db = new bdsharkEntities())
            {

                db.Configuration.LazyLoadingEnabled = true;
                var almacenesQuery = from storage in db.Almacenes where storage.codigo == codigo select storage;
                // Iterate through the results of the parameterized query.
                foreach (var storage in almacenesQuery)
                {
                    almacen = storage;
                }
            }

            return almacen;
        }

        /// <summary>
        /// Registra un objeto almacén en la base de datos.
        /// </summary>
        /// <param name="almacen">Objeto a registrar.</param>
        public void registrar(Almacen almacen)
        {
            using (bdsharkEntities db = new bdsharkEntities())
            {
                db.Configuration.LazyLoadingEnabled = true;
                db.Almacenes.Add(almacen);
                db.SaveChanges();
            }
        }

        /// <summary>
        /// Modifica un objeto almacén.
        /// </summary>
        /// <param name="almacen"></param>
        public void Modify(Almacen almacen)
        {

            using (bdsharkEntities db = new bdsharkEntities())
            {
                Almacen storage = obtenerCodigo(almacen.codigo);
                storage.nombre = almacen.nombre;
                db.Entry(storage).State = EntityState.Modified;
                db.SaveChanges();
            }
        }

        /// <summary>
        /// Elimina un almacén en la base de datos Shark_"LaEmpresa".
        /// </summary>
        /// <param name="codigo"></param>
        public void delete(String codigo)
        {
            using (bdsharkEntities db = new bdsharkEntities())
            {
                var Query = from almacen in db.Almacenes where almacen.codigo == codigo select almacen;
                foreach (var almacen in Query)
                {
                    db.Entry(almacen).State = EntityState.Deleted;
                }
                db.SaveChanges();
            }
        }


    }
}
