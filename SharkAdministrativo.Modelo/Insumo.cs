//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharkAdministrativo.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Data;
    
    public partial class Insumo
    {
        public Insumo()
        {
            this.Presentacion = new HashSet<Presentacion>();
            this.Receta = new HashSet<Receta>();
            this.Salida_almacen = new HashSet<Salida_almacen>();
        }
    
        public int id { get; set; }
        public string descripcion { get; set; }
        public Nullable<double> ultimo_costo { get; set; }
        public Nullable<double> costo_promedio { get; set; }
        public Nullable<double> IVA { get; set; }
        public Nullable<double> costo_con_impuesto { get; set; }
        public string inventariable { get; set; }
        public Nullable<double> minimo { get; set; }
        public Nullable<double> maximo { get; set; }
        public int grupo_id { get; set; }
        public int unidad_id { get; set; }
    
        public virtual Grupo Grupo { get; set; }
        public virtual Unidad_Medida Unidad_Medida { get; set; }
        public virtual ICollection<Presentacion> Presentacion { get; set; }
        public virtual ICollection<Receta> Receta { get; set; }
        public virtual ICollection<Salida_almacen> Salida_almacen { get; set; }

        /// <summary>
        /// Registra un objeto insumo en la base de datos.
        /// </summary>
        /// <param name="insumo">Objeto a registrar.</param>
        public void registrar(Insumo insumo)
        {
            using (bdsharkEntities db = new bdsharkEntities())
            {
                db.Configuration.LazyLoadingEnabled = true;

                db.Grupos.Attach(insumo.Grupo);
                db.Unidades_Medida.Attach(insumo.Unidad_Medida);
                db.Insumos.Add(insumo);
                db.SaveChanges();

            }
        }

        /// <summary>
        /// Obtiene un objeto insumo específico.
        /// </summary>
        /// <param name="id">Parámetro de búsqueda.</param>
        /// <returns>El objeto encontrado.</returns>
        public Insumo obtenerPorID(int id)
        {
            Insumo insumo = new Insumo();
            using (bdsharkEntities db = new bdsharkEntities())
            {
                insumo = db.Insumos.Find(id);
            }
            return insumo;
        }

        /// <summary>
        /// Elimina un objeto específico.
        /// </summary>
        /// <param name="d_insumo">Objeto a eliminar.</param>
        public void eliminar(Insumo d_insumo)
        {
            using (bdsharkEntities db = new bdsharkEntities())
            {
                var insumosQuery = from insumo in db.Insumos where insumo.id == d_insumo.id select insumo;

                foreach (var insumo in insumosQuery)
                {
                    db.Entry(insumo).State = EntityState.Deleted;
                }
                db.SaveChanges();
            }
        }

        /// <summary>
        /// Obtiene todos los reistros de insumos.
        /// </summary>
        /// <returns>La lista de objetos.</returns>
        public List<Insumo> obtenerTodos()
        {
            List<Insumo> insumos = new List<Insumo>();
            bdsharkEntities db = new bdsharkEntities();

            db.Configuration.LazyLoadingEnabled = true;
            var insumosQuery = from insumo in db.Insumos select insumo;
            foreach (var insumo in insumosQuery)
            {
                insumos.Add(insumo);
            }

            return insumos;
        }

        /// <summary>
        /// Obtiene un objeto insumo específico.
        /// </summary>
        /// <param name="descripcion">Parámetro de búsqueda.</param>
        /// <returns>El objeto encontrado.</returns>
        public Insumo obtener(string descripcion)
        {
            Insumo insu = new Insumo();
            using (bdsharkEntities db = new bdsharkEntities())
            {

                db.Configuration.LazyLoadingEnabled = true;
                var insumosQuery = from insumo in db.Insumos where insumo.descripcion == descripcion select insumo;

                foreach (var insumo in insumosQuery)
                {
                    insu = insumo;
                }
            }

            return insu;
        }

        /// <summary>
        /// Modifíca un objeto específico en la base de datos.
        /// </summary>
        /// <param name="insumo"> Objeto a modificar.</param>
        public void modificar(Insumo insumo)
        {

            using (bdsharkEntities db = new bdsharkEntities())
            {
                Insumo n_insumo = db.Insumos.Find(insumo.id);
                n_insumo.descripcion = insumo.descripcion;
                n_insumo.costo_promedio = insumo.costo_promedio;
                n_insumo.costo_con_impuesto = insumo.costo_con_impuesto;
                n_insumo.grupo_id = insumo.grupo_id;
                n_insumo.inventariable = insumo.inventariable;
                n_insumo.IVA = insumo.IVA;
                n_insumo.maximo = insumo.maximo;
                n_insumo.minimo = insumo.minimo;
                n_insumo.ultimo_costo = insumo.ultimo_costo;
                n_insumo.unidad_id = insumo.unidad_id;

                db.Insumos.Attach(n_insumo);
                db.Entry(n_insumo).State = EntityState.Modified;
                db.SaveChanges();
            }
        }
    }
}
