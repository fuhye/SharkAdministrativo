//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharkAdministrativo.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Linq;
    
    public partial class Tipo_movimiento
    {
        public Tipo_movimiento()
        {
            this.Salida_almacen = new HashSet<Salida_almacen>();
        }
    
        public int id { get; set; }
        public string nombre { get; set; }
    
        public virtual ICollection<Salida_almacen> Salida_almacen { get; set; }

        public List<Tipo_movimiento> obtenerTodos()
        {
            List<Tipo_movimiento> movimientos = new List<Tipo_movimiento>();
            using (bdsharkEntities db = new bdsharkEntities())
            {
                db.Configuration.LazyLoadingEnabled = true;
                var Query = from movimiento in db.Tipo_movimientos select movimiento;
                foreach (var movimiento in Query)
                {
                    movimientos.Add(movimiento);
                }
            }
            return movimientos;
        }

        /// <summary>
        /// Obtiene un objeto tipo_movimiento específico.
        /// </summary>
        /// <param name="descripcion">Parámetro de búsqueda.</param>
        /// <returns>El objeto encontrado.</returns>
        public Tipo_movimiento obtener(string name)
        {
            Tipo_movimiento _tipo = new Tipo_movimiento();
            using (bdsharkEntities db = new bdsharkEntities())
            {

                db.Configuration.LazyLoadingEnabled = true;
                var Query = from tipo in db.Tipo_movimientos where tipo.nombre == name select tipo;

                foreach (var tipo in Query)
                {
                    _tipo = tipo;
                }
            }

            return _tipo;
        }
    }
}
