//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharkAdministrativo.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Data;
    
    public partial class Empresa
    {
        public Empresa()
        {
            this.Proveedor = new HashSet<Proveedor>();
        }
    
        public int id { get; set; }
        public string nombre { get; set; }
        public string rfc { get; set; }
        public string calle { get; set; }
        public string noExterior { get; set; }
        public string codigo_postal { get; set; }
        public string colonia { get; set; }
        public string localidad { get; set; }
        public string municipio { get; set; }
        public string estado { get; set; }
        public string pais { get; set; }
    
        public virtual ICollection<Proveedor> Proveedor { get; set; }

        /// <summary>
        /// Obtiene el objeto empresa a través de su RFC.
        /// </summary>
        /// <param name="RFC">RFC de la empresa a buscar.</param>
        /// <returns>El objeto empresa.</returns>
        public Empresa obtenerPorRFC(string RFC)
        {

            Empresa company = new Empresa();


            using (bdsharkEntities db = new bdsharkEntities())
            {

                db.Configuration.LazyLoadingEnabled = true;
                var empresaQuery = from empresa in db.Empresas where empresa.rfc.Trim() == RFC select empresa;
                // Iterate through the results of the parameterized query.
                foreach (var empresa in empresaQuery)
                {
                    company = empresa;
                }
            }

            return company;
        }

        /// <summary>
        /// Obtiene un objeto Empresa.  
        /// </summary>
        /// <param name="Name">Parámetro de búsqueda.</param>
        /// <returns>El objeto encontrado.</returns>
        public Empresa obtenerPorNombre(string Name)
        {

            Empresa company = new Empresa();


            using (bdsharkEntities db = new bdsharkEntities())
            {

                db.Configuration.LazyLoadingEnabled = true;
                var empresaQuery = from empresa in db.Empresas where empresa.nombre.Trim() == Name select empresa;
                // Iterate through the results of the parameterized query.
                foreach (var empresa in empresaQuery)
                {
                    company = empresa;
                }
            }

            return company;
        }

        /// <summary>
        /// Obtiene todos los registros de empresas.
        /// </summary>
        /// <returns>La lista de empresas.</returns>
        public List<Empresa> obtenerTodos()
        {

            List<Empresa> empresas = new List<Empresa>();
            using (bdsharkEntities db = new bdsharkEntities())
            {

                db.Configuration.LazyLoadingEnabled = true;
                var empresaQuery = from empresa in db.Empresas select empresa;
                // Iterate through the results of the parameterized query.
                foreach (var empresa in empresaQuery)
                {
                    empresas.Add(empresa);
                }
            }

            return empresas;
        }
    }
}
